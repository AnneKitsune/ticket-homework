package com.jojoalex.ticket.model.entities;
// Generated 7-May-2018 1:30:40 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TicketUpdate generated by hbm2java
 */
@Entity
@Table(name="ticket_update"
    ,catalog="tickets"
)
@NamedQueries({
    @NamedQuery(
            name = "findTicketUpdateById",
            query = "from TicketUpdate t where t.id = :id"
    ),
    @NamedQuery(
            name = "findAllTicketUpdate",
            query = "from TicketUpdate t"
    )
})
public class TicketUpdate  implements java.io.Serializable {


     private Integer id;
     private Ticket ticket;
     private User user;
     private String content;
     private Date createdAt;

    public TicketUpdate() {
    }

    public TicketUpdate(Ticket ticket, User user, String content, Date createdAt) {
       this.ticket = ticket;
       this.user = user;
       this.content = content;
       this.createdAt = createdAt;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ticket_id", nullable=false)
    public Ticket getTicket() {
        return this.ticket;
    }
    
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="content", nullable=false, length=500)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }




}


