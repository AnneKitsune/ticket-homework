package com.jojoalex.ticket.model.entities;
// Generated 7-May-2018 1:30:40 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ticket generated by hbm2java
 */
@Entity
@Table(name="Ticket"
    ,catalog="tickets"
)
public class Ticket  implements java.io.Serializable {


     private Integer id;
     private User userByForUser;
     private User userByClosedBy;
     private User userByOpenedBy;
     private String title;
     private String content;
     private Date createdAt;
     private Date closedAt;
     private String priority;
     private Set<TicketUpdate> ticketUpdates = new HashSet<TicketUpdate>(0);

    public Ticket() {
    }

	
    public Ticket(User userByForUser, User userByOpenedBy, String title, String content, Date createdAt, String priority) {
        this.userByForUser = userByForUser;
        this.userByOpenedBy = userByOpenedBy;
        this.title = title;
        this.content = content;
        this.createdAt = createdAt;
        this.priority = priority;
    }
    public Ticket(User userByForUser, User userByClosedBy, User userByOpenedBy, String title, String content, Date createdAt, Date closedAt, String priority, Set<TicketUpdate> ticketUpdates) {
       this.userByForUser = userByForUser;
       this.userByClosedBy = userByClosedBy;
       this.userByOpenedBy = userByOpenedBy;
       this.title = title;
       this.content = content;
       this.createdAt = createdAt;
       this.closedAt = closedAt;
       this.priority = priority;
       this.ticketUpdates = ticketUpdates;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="for_user", nullable=false)
    public User getUserByForUser() {
        return this.userByForUser;
    }
    
    public void setUserByForUser(User userByForUser) {
        this.userByForUser = userByForUser;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="closed_by")
    public User getUserByClosedBy() {
        return this.userByClosedBy;
    }
    
    public void setUserByClosedBy(User userByClosedBy) {
        this.userByClosedBy = userByClosedBy;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="opened_by", nullable=false)
    public User getUserByOpenedBy() {
        return this.userByOpenedBy;
    }
    
    public void setUserByOpenedBy(User userByOpenedBy) {
        this.userByOpenedBy = userByOpenedBy;
    }

    
    @Column(name="title", nullable=false)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="content", nullable=false)
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false, length=19)
    public Date getCreatedAt() {
        return this.createdAt;
    }
    
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="closed_at", length=19)
    public Date getClosedAt() {
        return this.closedAt;
    }
    
    public void setClosedAt(Date closedAt) {
        this.closedAt = closedAt;
    }

    
    @Column(name="priority", nullable=false)
    public String getPriority() {
        return this.priority;
    }
    
    public void setPriority(String priority) {
        this.priority = priority;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="ticket")
    public Set<TicketUpdate> getTicketUpdates() {
        return this.ticketUpdates;
    }
    
    public void setTicketUpdates(Set<TicketUpdate> ticketUpdates) {
        this.ticketUpdates = ticketUpdates;
    }




}


